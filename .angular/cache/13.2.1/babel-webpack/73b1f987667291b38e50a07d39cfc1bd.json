{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport let FormComponent = /*#__PURE__*/(() => {\n  class FormComponent {\n    // @Output()\n    // sendFormEvent = new EventEmitter();\n    constructor(formBuilder) {\n      this.formBuilder = formBuilder;\n      this.isSumit = false;\n    }\n\n    ngOnInit() {\n      this.buildForm();\n    }\n\n    submitForm(event) {\n      this.isSumit = true;\n\n      if (!this.noteForm.invalid) {\n        alert('Fine. More work...');\n      } else {\n        alert(`How could you even fail that? Imagine it's easy and try again.`);\n      } // this.sendFormEvent.emit(event);\n\n    }\n\n    get f() {\n      return this.noteForm.controls;\n    }\n\n    buildForm() {\n      this.noteForm = this.formBuilder.group({\n        title: ['', Validators.required],\n        body: ['', Validators.required]\n      });\n    }\n\n  }\n\n  FormComponent.ɵfac = function FormComponent_Factory(t) {\n    return new (t || FormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n\n  FormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormComponent,\n    selectors: [[\"app-form\"]],\n    inputs: {\n      isCreate: \"isCreate\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"formDirective\", \"ngForm\"]],\n    template: function FormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0, 1);\n        i0.ɵɵlistener(\"ngSubmit\", function FormComponent_Template_form_ngSubmit_0_listener($event) {\n          return ctx.submitForm($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.noteForm);\n      }\n    },\n    styles: [\"\"]\n  });\n  return FormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}