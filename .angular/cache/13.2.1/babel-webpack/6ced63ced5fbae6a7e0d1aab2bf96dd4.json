{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/form-field\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/common\";\n\nfunction FormComponent_mat_error_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"i\", 7);\n    i0.ɵɵtext(2, \"error_outline\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4, \"Title is required.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction FormComponent_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, FormComponent_mat_error_6_ng_container_1_Template, 5, 0, \"ng-container\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.title.errors.required);\n  }\n}\n\nfunction FormComponent_mat_error_11_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"i\", 7);\n    i0.ɵɵtext(2, \"error_outline\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4, \"Body is required.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction FormComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, FormComponent_mat_error_11_ng_container_1_Template, 5, 0, \"ng-container\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f.body.errors.required);\n  }\n}\n\nfunction FormComponent_ng_container_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function FormComponent_ng_container_14_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.deleteNote();\n    });\n    i0.ɵɵtext(2, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r3.isSubmit);\n  }\n}\n\nexport let FormComponent = /*#__PURE__*/(() => {\n  class FormComponent {\n    constructor(formBuilder) {\n      this.formBuilder = formBuilder;\n      this.isSubmit = false;\n      this.sendFormEvent = new EventEmitter();\n      this.sendDeleteEvent = new EventEmitter();\n    }\n\n    ngOnInit() {// this.buildForm();\n    }\n\n    ngOnChanges() {\n      this.buildForm();\n    }\n\n    submitForm(_event) {\n      this.isSubmit = true;\n\n      if (!this.noteForm.invalid) {\n        this.sendForm(this.noteForm, this.isCreate);\n        this.buildForm();\n        this.isSubmit = false;\n      }\n    }\n\n    deleteNote() {\n      this.sendDeleteEvent.emit(this.currNote);\n    }\n\n    get f() {\n      return this.noteForm.controls;\n    }\n\n    buildForm() {\n      var _a, _b;\n\n      this.noteForm = this.formBuilder.group({\n        title: [(_a = this.currNote) === null || _a === void 0 ? void 0 : _a.title, Validators.required],\n        body: [(_b = this.currNote) === null || _b === void 0 ? void 0 : _b.body, Validators.required]\n      });\n    }\n\n    sendForm(noteForm, isCreate) {\n      const form = noteForm.value;\n      const data = {\n        form,\n        isCreate\n      };\n      this.sendFormEvent.emit(data);\n    }\n\n  }\n\n  FormComponent.ɵfac = function FormComponent_Factory(t) {\n    return new (t || FormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n\n  FormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormComponent,\n    selectors: [[\"app-form\"]],\n    hostAttrs: [1, \"form\"],\n    inputs: {\n      isCreate: \"isCreate\",\n      currNote: \"currNote\"\n    },\n    outputs: {\n      sendFormEvent: \"sendFormEvent\",\n      sendDeleteEvent: \"sendDeleteEvent\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 15,\n    vars: 12,\n    consts: [[\"autocomplete\", \"off\", 3, \"formGroup\", \"ngSubmit\"], [\"formDirective\", \"ngForm\"], [\"type\", \"text\", \"formControlName\", \"title\", \"matInput\", \"\", 3, \"disabled\"], [4, \"ngIf\"], [1, \"mat-form-field--textarea\"], [\"formControlName\", \"body\", \"matInput\", \"\", 3, \"disabled\"], [\"type\", \"submit\", 1, \"button\", 3, \"disabled\"], [1, \"material-icons\"], [1, \"button\", \"button--secondary\", 3, \"disabled\", \"click\"]],\n    template: function FormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0, 1);\n        i0.ɵɵlistener(\"ngSubmit\", function FormComponent_Template_form_ngSubmit_0_listener($event) {\n          return ctx.submitForm($event);\n        });\n        i0.ɵɵelementStart(2, \"mat-form-field\");\n        i0.ɵɵelementStart(3, \"mat-label\");\n        i0.ɵɵtext(4, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 2);\n        i0.ɵɵtemplate(6, FormComponent_mat_error_6_Template, 2, 1, \"mat-error\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mat-form-field\", 4);\n        i0.ɵɵelementStart(8, \"mat-label\");\n        i0.ɵɵtext(9, \"Body\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"textarea\", 5);\n        i0.ɵɵtemplate(11, FormComponent_mat_error_11_Template, 2, 1, \"mat-error\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\", 6);\n        i0.ɵɵtext(13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, FormComponent_ng_container_14_Template, 3, 1, \"ng-container\", 3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.noteForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"mat-form-field--error\", ctx.isSubmit && ctx.f.title.errors);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.isSubmit);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isSubmit && ctx.f.title.errors);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"mat-form-field--error\", ctx.isSubmit && ctx.f.body.errors);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.isSubmit);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isSubmit && ctx.f.body.errors);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.isSubmit);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.isCreate ? \"Save\" : \"Update\", \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isCreate);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i2.MatFormField, i2.MatLabel, i1.DefaultValueAccessor, i3.MatInput, i1.NgControlStatus, i1.FormControlName, i4.NgIf, i2.MatError],\n    styles: [\"\"]\n  });\n  return FormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}