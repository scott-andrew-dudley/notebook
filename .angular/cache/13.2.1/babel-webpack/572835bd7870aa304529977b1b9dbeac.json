{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet FormComponent = class FormComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.isSubmit = false;\n    this.sendFormEvent = new EventEmitter();\n    this.sendDeleteEvent = new EventEmitter();\n  }\n\n  ngOnInit() {// this.buildForm();\n  }\n\n  ngOnChanges() {\n    this.buildForm();\n  }\n\n  submitForm(_event) {\n    this.isSubmit = true;\n\n    if (!this.noteForm.invalid) {\n      this.sendForm(this.noteForm, this.isCreate);\n      this.buildForm();\n      this.isSubmit = false;\n    }\n  }\n\n  deleteNote() {\n    this.sendDeleteEvent.emit(this.currNote);\n  }\n\n  get f() {\n    return this.noteForm.controls;\n  }\n\n  buildForm() {\n    var _a, _b;\n\n    this.noteForm = this.formBuilder.group({\n      title: [(_a = this.currNote) === null || _a === void 0 ? void 0 : _a.title, Validators.required],\n      body: [(_b = this.currNote) === null || _b === void 0 ? void 0 : _b.body, Validators.required]\n    });\n  }\n\n  sendForm(noteForm, isCreate) {\n    const form = noteForm.value;\n    const data = {\n      form,\n      isCreate\n    };\n    this.sendFormEvent.emit(data);\n  }\n\n};\n\n__decorate([Input()], FormComponent.prototype, \"isCreate\", void 0);\n\n__decorate([Input()], FormComponent.prototype, \"currNote\", void 0);\n\n__decorate([Output()], FormComponent.prototype, \"sendFormEvent\", void 0);\n\n__decorate([Output()], FormComponent.prototype, \"sendDeleteEvent\", void 0);\n\nFormComponent = __decorate([Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss'],\n  host: {\n    class: 'form'\n  }\n})], FormComponent);\nexport { FormComponent };","map":null,"metadata":{},"sourceType":"module"}